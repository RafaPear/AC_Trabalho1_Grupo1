P16 assembler v1.5 (Feb  9 2024)	d:\1-ISEL\Semestre_2\AC\Trabalhos\AC_Trabalho1_Grupo1\src\cena.lst	Mon Mar 24 13:50:10 2025

Sections
Index   Name            Address   Size
0       .text           0000      0070 112

Symbols
Name                    Type      Value       Section
else_if                 LABEL     0016 22     .text
end_else_if             LABEL     0026 38     .text
end_if                  LABEL     0012 18     .text
if                      LABEL     0002 2      .text
main                    LABEL     0066 102    .text
umull32                 LABEL     004C 76     .text
while                   LABEL     002C 44     .text
while_begin             LABEL     0028 40     .text
while_end               LABEL     004A 74     .text

Code listing
   1 0000 32 58	B main
   2           	
   3           	if:
   4 0002 05 60	    MOV R5, #0
   5 0004 50 BB	    CMP R5, R6
   6 0006 0F 44	    BNE end_else_if
   7 0008 15 60	    MOV R5, #1
   8 000A C0 BA	    CMP R4, R5
   9 000C 0C 44	    BNE end_else_if
  10           	
  11 000E 12 81	    ADD R2, R1, R2
  12           	
  13 0010 00 58	    B end_if
  14           	
  15           	end_if:
  16 0012 05 B7	    MOV R5, LR
  17 0014 5F A1	    ADD PC, R5, #2
  18           	
  19           	else_if:
  20 0016 15 60	    MOV R5, #1
  21 0018 50 BB	    CMP R5, R6
  22 001A 05 44	    BNE end_else_if
  23 001C 05 60	    MOV R5, #0
  24 001E C0 BA	    CMP R4, R5
  25 0020 02 44	    BNE end_else_if
  26           	
  27 0022 A2 88	    SUB R2, R2, R1
  28 0024 00 58	    B end_else_if
  29           	
  30           	end_else_if:
  31 0026 0F B7	    MOV PC, LR
  32           	
  33           	while_begin:
  34 0028 0E 24	    PUSH LR
  35 002A 00 58	    B while
  36           	
  37           	while:
  38 002C 06 61	    MOV R6, #16
  39 002E 50 BB	    CMP R5, R6
  40 0030 0C 40	    BEQ while_end
  41           	    
  42 0032 05 24	    PUSH R5
  43           	    
  44 0034 15 60	    MOV R5, #1
  45 0036 D6 C1	    AND R6, R5, R3
  46           	    
  47 0038 E4 5F	    BL if
  48 003A ED 5F	    BL else_if
  49           	    ; p_1 = result&1
  50 003C 15 60	    MOV R5, #1
  51 003E D4 C1	    AND R4, R5, R3
  52           	
  53 0040 05 04	    POP R5
  54           	
  55 0042 D5 A0	    ADD R5, R5, #1
  56           	    ; result = result >> 1
  57 0044 A2 F0	    ASR R2, R2, #1
  58 0046 33 D8	    RRX R3, R3
  59 0048 F1 5B	    B while
  60           	
  61           	
  62           	while_end:
  63 004A 0F 04	    POP PC
  64           	
  65           	umull32:
  66 004C 0E 24	    PUSH LR
  67 004E 04 24	    PUSH R4
  68 0050 05 24	    PUSH R5
  69 0052 06 24	    PUSH R6
  70           	    ; -------- IN --------
  71           	    ; R0, R1 => M
  72           	    ; R2, R3 => m
  73           	    ;
  74           	    ; ----- INTERNAL -----
  75           	    ; R4 => P_1
  76           	    ; R5 => i/TEMP
  77           	    ; R6 => AND [>]
  78           	    
  79 0054 04 60	    MOV R4, #0 ; p_1 = 0
  80 0056 05 60	    MOV R5, #0 ; i = 0
  81           	
  82 0058 E7 5F	    BL while_begin
  83           	
  84 005A 00 B1	    MOV R0, R2
  85 005C 81 B1	    MOV R1, R3
  86           	    
  87 005E 06 04	    POP R6
  88 0060 05 04	    POP R5
  89 0062 04 04	    POP R4
  90 0064 0F 04	    POP PC
  91           	
  92           	main:
  93 0066 00 60	    MOV R0, #0
  94 0068 21 63	    MOV R1, #50
  95 006A 02 60	    MOV R2, #0
  96 006C 23 63	    MOV R3, #50
  97 006E EE 5F	    BL umull32
  97           	    
